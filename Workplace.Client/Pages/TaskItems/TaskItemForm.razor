@page "/tasklist/{Id:int=0}"
@inject IDataService data
@inject NavigationManager navigate

<h3>Форма редактирования @Id</h3>

<EditForm Model="TaskItem" OnValidSubmit="Submit"> 
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="name">@DisplayName(() => TaskItem.Name)</label>
        <InputText @bind-Value="TaskItem.Name" class="form-control" id="name" />
        <ValidationMessage For="@(() => TaskItem.Name)" />
    </div>

    <div class="form-group">
        <label for="desc">@DisplayName(() => TaskItem.Description)</label>
        <InputText @bind-Value="TaskItem.Description" class="form-control" id="desc" />
        <ValidationMessage For="@(() => TaskItem.Description)" />
    </div>

    <button type="submit">Ok</button>
    <button type="button" @onclick="async () => await Cancel()">Cancel</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    TaskItemDTO TaskItem { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            TaskItemDTO task = await data.GetTaskItemAsync(Id);
            TaskItem!.Id = task.Id;
            TaskItem!.Name = task.Name;
            TaskItem!.Description = task.Description;
        }
    }

    async Task Submit()
    {
        await data.UpdateAsync(TaskItem!);
        await Task.Run(() => navigate.NavigateTo("/"));
    }

    async Task Cancel()
    {
        await Task.Run(() => navigate.NavigateTo("/"));
    }
}
