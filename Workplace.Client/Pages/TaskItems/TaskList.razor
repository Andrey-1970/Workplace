@page "/"
@inject IDataService data
@inject NavigationManager navigate

<PageTitle>Список задач</PageTitle>

<h3>Спиок задач</h3>

@if (tasks == null)
{
    <p>Loading ...</p>
}
else
{
    <div>
        <button type="button" class="btn btn-secondary" @onclick="OnAddHandler">Новая задача</button>
    </div>
    <div class="row">
        @foreach (var task in tasks)
        {
            <div class="card col-xxl-3 col-xl-4 col-md-12 col-sm-12">
                <TaskCard TaskItem="task" 
                    OnUpdate="async () => await OnUpdateHandler(task.Id)" 
                    OnDelete="async () => await OnDeleteHandler(task.Id)" 
                />
            </div>
        }
    </div>
}

@code {
    IEnumerable<TaskItemDTO>? tasks;

    protected override async Task OnParametersSetAsync()
    {
        tasks = await data.GetAllAsync();
    }

    async Task OnAddHandler()
    {
        await Task.Run(() => navigate.NavigateTo($"/tasklist"));
    }

    async Task OnUpdateHandler(int id)
    {
        await Task.Run(() => navigate.NavigateTo($"/tasklist/{id}"));
    }

    async Task OnDeleteHandler(int id)
    {
        await data.DeleteAsync(id);
    }
}
